from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards.simple_row import make_row_keyboard
from data.client import data_manager

language_interface = ["RUüá∑üá∫", "ENüá∫üá∏"]

router = Router()
class StartBot(StatesGroup):
    language_selection = State()


@router.message(Command(commands=['start', 'updlang']))
async def command_start_handler(message: Message, state: FSMContext):
    await message.answer(
        text="–ü—Ä–∏–≤–µ—Ç, –Ø –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫!üòä\n" \
             "–Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –ø–∏—à–µ—à—å.ü§î\n" \
             "–í—ã–±–µ—Ä–∏ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞:",
        reply_markup=make_row_keyboard(language_interface)
    )
    await state.set_state(StartBot.language_selection)


@router.message(StartBot.language_selection, F.text.in_(language_interface))
async def translation_language(message: Message, state: FSMContext):
    await state.update_data(lang_selection=message.text.lower())

    data_manager.create_user(name_user=message.from_user.full_name,
                             id_user=message.from_user.id,
                             lang_user=message.text[0:2].lower())

    await message.answer(text="–°–ø–∞—Å–∏–±–æ. –¢–µ–ø–µ—Ä—å –≤–≤–æ–¥–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞!",
                        reply_markup=ReplyKeyboardRemove())
    data_manager._show_table()
